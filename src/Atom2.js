/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Author: Master Ron (https://sketchfab.com/master_ron)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/atom-b505bc59e6fb48569e4f032a0734f743
Title: Atom
*/

import React, { useRef } from "react";
import { useGLTF, useAnimations } from "@react-three/drei";
import { MeshNormalMaterial } from "three";

export default function Atom2(props) {
  const group = useRef();
  const { nodes, materials, animations } = useGLTF("/atom.glb");
  const { actions } = useAnimations(animations, group);

console.log(actions);
// actions.play();
// actions["Take 01"].play();
console.log(materials.electron_shell.type);
// materials.electron.electron_shell.type ="MeshNormalMaterial";
  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Sketchfab_Scene">
        <group
          name="Sketchfab_model"
          position={[0, 0, -0.1]}
          rotation={[-Math.PI / 2, 0, 0]}
          userData={{ name: "Sketchfab_model" }}
        >
          <group name="Root" userData={{ name: "Root" }}>
            <group
              name="Lamp"
              position={[3.7, 4.2, 6.2]}
              rotation={[-0.3, 0.5, 1.9]}
              userData={{ name: "Lamp" }}
            >
              <group name="Lamp_1" userData={{ name: "Lamp" }} />
            </group>
            <group
              name="core"
              rotation={[1, 0, -0.1]}
              scale={0.5}
              userData={{ name: "core" }}
            >
              <mesh
                name="core_0"
                castShadow
                receiveShadow
                geometry={nodes.core_0.geometry}
                material={materials.core}
                userData={{ name: "core_0" }}
              />
            </group>
            <group
              name="electron_shell"
              rotation={[0.8, 0.7, 3.1]}
              userData={{ name: "electron shell" }}
            >
              <mesh
                name="electron_shell_0"
                castShadow
                receiveShadow
                geometry={nodes.electron_shell_0.geometry}
                material={materials.electron_shell}
                userData={{ name: "electron shell_0" }}
              />
            </group>
            <group
              name="electron_shell2"
              rotation={[-1, -0.3, 0.5]}
              userData={{ name: "electron shell2" }}
            >
              <mesh
                name="electron_shell2_0"
                castShadow
                receiveShadow
                geometry={nodes.electron_shell2_0.geometry}
                material={materials.electron_shell}
                userData={{ name: "electron shell2_0" }}
              />
            </group>
            <group
              name="electron_shell3"
              rotation={[3.1, -0.1, 0]}
              userData={{ name: "electron shell3" }}
            >
              <mesh
                name="electron_shell3_0"
                castShadow
                receiveShadow
                geometry={nodes.electron_shell3_0.geometry}
                material={materials.electron_shell}
                userData={{ name: "electron shell3_0" }}
              />
            </group>
            <group
              name="electron_2"
              position={[0.1, 0, -0.1]}
              rotation={[0.8, 0.7, 3]}
              userData={{ name: "electron 2" }}
            >
              <mesh
                name="electron_2_0"
                castShadow
                receiveShadow
                geometry={nodes.electron_2_0.geometry}
                material={materials.electron}
                userData={{ name: "electron 2_0" }}
              />
            </group>
            <group
              name="electron__3"
              position={[0.1, 0, -0.1]}
              rotation={[3.1, -0.1, -0.1]}
              userData={{ name: "electron  3" }}
            >
              <mesh
                name="electron__3_0"
                castShadow
                receiveShadow
                geometry={nodes.electron__3_0.geometry}
                material={materials.electron}
                userData={{ name: "electron  3_0" }}
              />
            </group>
            <group
              name="electron_1"
              position={[0.1, 0, -0.1]}
              rotation={[-1, -0.3, 0.5]}
              userData={{ name: "electron 1" }}
            >
              <mesh
                name="electron_1_0"
                castShadow
                receiveShadow
                geometry={nodes.electron_1_0.geometry}
                material={materials.electron}
                userData={{ name: "electron 1_0" }}
              />
            </group>
          </group>
        </group>
      </group>
    </group>
  );
}

useGLTF.preload("/atom.glb");
